# Generated by Django 5.2 on 2025-04-29 13:41

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Назва команди')),
                ('coach', models.CharField(blank=True, max_length=200, null=True, verbose_name='Тренер')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команди',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recommendation_text', models.TextField(verbose_name='Текст рекомендації')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='simulator.team')),
            ],
            options={
                'verbose_name': 'Рекомендація',
                'verbose_name_plural': 'Рекомендації',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name="Ім'я")),
                ('age', models.PositiveIntegerField(verbose_name='Вік')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Позиція')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='simulator.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Гравець',
                'verbose_name_plural': 'Гравці',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Назва змагання')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Місце проведення')),
                ('start_date', models.DateField(verbose_name='Дата початку')),
                ('end_date', models.DateField(verbose_name='Дата кінця')),
                ('teams', models.ManyToManyField(blank=True, related_name='events', to='simulator.team', verbose_name='Команди-учасниці')),
            ],
            options={
                'verbose_name': 'Змагання',
                'verbose_name_plural': 'Змагання',
                'ordering': ['start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Назва турніру')),
                ('standings', models.JSONField(blank=True, default=dict, verbose_name='Турнірна таблиця')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournaments', to='simulator.event', verbose_name='Змагання')),
                ('teams', models.ManyToManyField(blank=True, related_name='tournaments', to='simulator.team', verbose_name='Команди-учасниці')),
            ],
            options={
                'verbose_name': 'Турнір',
                'verbose_name_plural': 'Турніри',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('match_datetime', models.DateTimeField(verbose_name='Дата і час матчу')),
                ('score1', models.PositiveIntegerField(blank=True, null=True, verbose_name='Рахунок команди 1')),
                ('score2', models.PositiveIntegerField(blank=True, null=True, verbose_name='Рахунок команди 2')),
                ('status', models.CharField(choices=[('scheduled', 'Заплановано'), ('in_progress', 'Триває'), ('finished', 'Завершено'), ('cancelled', 'Скасовано')], default='scheduled', max_length=20, verbose_name='Статус матчу')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='simulator.team', verbose_name='Команда 1 (Господарі)')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='simulator.team', verbose_name='Команда 2 (Гості)')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='simulator.tournament', verbose_name='Турнір')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчі',
                'ordering': ['match_datetime'],
            },
        ),
        migrations.CreateModel(
            name='PlayerStatistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('games_played', models.PositiveIntegerField(default=0, verbose_name='Зіграно матчів')),
                ('goals', models.PositiveIntegerField(default=0, verbose_name='Голи')),
                ('assists', models.PositiveIntegerField(default=0, verbose_name='Асисти')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='simulator.player', verbose_name='Гравець')),
            ],
            options={
                'verbose_name': 'Статистика гравця',
                'verbose_name_plural': 'Статистики гравців',
                'constraints': [models.UniqueConstraint(fields=('player',), name='unique_player_stats')],
            },
        ),
    ]
